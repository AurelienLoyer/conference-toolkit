(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["remote"],{"335a":function(n,t,o){"use strict";o("47db")},"47db":function(n,t,o){},"89dd":function(n,t,o){"use strict";o.r(t);var e=function(){var n=this,t=n.$createElement,o=n._self._c||t;return o("div",{staticClass:"remote"},[o("p",[n._v("WebRTC support: "+n._s(this.supported))]),o("button",{on:{click:function(t){return n.sendData("LEFT")}}},[n._v("LEFT")])])},s=[],i=o("051a"),a=o.n(i),r={data:function(){return{p:null,supported:a.a.WEBRTC_SUPPORT}},mounted:function(){this.p=new a.a({initiator:!0}),this.p.on("error",this.onError),this.p.on("signal",this.onSignal),this.p.on("data",this.onData),this.p.on("connect",(function(){console.log("SOMEONE CONNECT"),this.p.send("whatever"+Math.random())}))},methods:{onError:function(n){console.log("error",n)},onSignal:function(n){console.log("SIGNAL",JSON.stringify(n))},onData:function(n){console.log("data: "+n)},sendData:function(n){this.p.connected?this.p.send(n):console.log("☢️ Not connected")}}},c=r,u=(o("335a"),o("2877")),l=Object(u["a"])(c,e,s,!1,null,"26226450",null);t["default"]=l.exports}}]);
//# sourceMappingURL=remote.fda3c835.js.map